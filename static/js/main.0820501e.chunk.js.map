{"version":3,"sources":["api/users.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","UserInfo","user","className","href","TodoInfo","todo","findUser","usersFromServer","find","cn","TodoList","todos","map","App","useState","todosFromServer","setTodos","setTitle","setUserId","titleError","setTitleError","userError","setUserError","onSubmit","event","preventDefault","isTitleSpaces","test","trim","newTodo","Math","max","currentTodo","action","method","htmlFor","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0820501e.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({\n  user,\n}) => {\n  const { email, name } = user;\n\n  return (\n    <a\n      className=\"UserInfo\"\n      href={`mailto:${email}`}\n    >\n      {name}\n    </a>\n  );\n};\n","import cn from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport usersFromServer from '../../api/users';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({\n  todo,\n}) => {\n  const {\n    id,\n    title,\n    completed,\n    userId,\n  } = todo;\n\n  const findUser = usersFromServer\n    .find(user => user.id === userId) || null;\n\n  return (\n    <article\n      data-id={id}\n      className={cn('TodoInfo', {\n        'TodoInfo--completed': completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {findUser && (\n        <UserInfo\n          user={findUser}\n        />\n      )}\n    </article>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n}) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo\n          todo={todo}\n          key={todo.id}\n        />\n      ))}\n    </section>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\nimport { Todo } from './types/Todo';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { TodoList } from './components/TodoList';\n\nexport const App = () => {\n  const [todos, setTodos] = useState<Todo[]>(todosFromServer);\n\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n\n  const [titleError, setTitleError] = useState(false);\n  const [userError, setUserError] = useState(false);\n\n  const titleHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setTitleError(false);\n  };\n\n  const selectUserHandler = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setUserError(false);\n  };\n\n  const resetFieldsForm = () => {\n    setTitle('');\n    setUserId(0);\n  };\n\n  const handleOnSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    const isTitleSpaces = /^\\s+$/.test(title);\n\n    setTitleError(!title || isTitleSpaces);\n    setUserError(!userId);\n\n    if (!title.trim() || !userId || isTitleSpaces) {\n      return;\n    }\n\n    const maxId = Math.max(...todos.map(todo => todo.id)) + 1;\n\n    const newTodo = {\n      id: maxId,\n      title,\n      completed: false,\n      userId,\n    };\n\n    setTodos(currentTodo => [...currentTodo, newTodo]);\n\n    resetFieldsForm();\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        onSubmit={handleOnSubmit}\n        action=\"/api/todos\"\n        method=\"POST\"\n      >\n        <div className=\"field\">\n          <label htmlFor=\"Title_Form\">Title: </label>\n          <input\n            id=\"Title_Form\"\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={titleHandler}\n          />\n          {titleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"Select\">User: </label>\n          <select\n            id=\"Select\"\n            data-cy=\"userSelect\"\n            value={userId}\n            onChange={selectUserHandler}\n          >\n            <option value={0} disabled>Choose a user</option>\n\n            {usersFromServer.map(({ id, name }) => (\n              <option\n                value={id}\n                key={id}\n              >\n                {name}\n              </option>\n            ))}\n\n          </select>\n\n          {userError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList\n        todos={todos}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}